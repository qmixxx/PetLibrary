name: Test CI

on: [ push, pull_request ]
jobs:
  build:
    runs-on: ubuntu-latest

    permissions: write-all

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven Packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Check environment variables
        run: env

      - name: Install Allure CLI
        run: |
          mkdir -p $HOME/.allure
          curl -sSL https://github.com/allure-framework/allurectl/releases/download/2.15.4/allurectl_linux_amd64 -o $HOME/.allure/allurectl
          chmod +x $HOME/.allure/allurectl

      - name: Build & Test with Coverage
        env:
          SECRET_A: ${{ secrets.SECRET_A }}
          SECRET_B: ${{ secrets.SECRET_B }}
        run: |
          mvn -e -fae clean test

      - name: Generate JaCoCo Report
        run: mvn jacoco:report

      - name: Run Checkstyle
        run: mvn checkstyle:check

      - name: Print surefire reports on failure
        if: failure()
        run: |
          echo "=== surefire reports ==="
          ls -la target/surefire-reports || true
          for f in target/surefire-reports/*.txt; do
            echo "----- $f -----"
            sed -n '1,200p' "$f" || true
          done

#      - name: Build test report
#        uses: simple-elf/allure-report-action@v1.7
#        if: always()
#        with:
#          allure_results: allure-results
#          allure_report: allure-report
#          allure_history: allure-history
#          keep_reports: 20

#      - name: Install Allure
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y allure

      - name: Install Allure
        run: |
          npm install -g allure-commandline --save-dev

      - name: Check Project
        run: |
          pwd
          tree
          allure --version

      - name: Generate Allure Report
        run: |
          allure generate allure-results -o allure-report --clean
#
#      - name: Fix permissions
#        run: |
#          sudo chown -R $USER:$USER allure-report allure-results || true
#          sudo chmod -R 777 allure-report allure-results || true
#
#      - name: Patch base href
#        run: |
#          if [ -f allure-report/index.html ]; then
#            echo "Fixing base href in allure-report/index.html"
#            sed 's#<base href="/">#<base href="/PetLibrary/">#' allure-report/index.html > allure-report/index_tmp.html
#            mv allure-report/index_tmp.html allure-report/index.html
#          fi
#
#      - name: Add environment info
#        run: |
#          mkdir -p allure-results
#          echo "BRANCH=${GITHUB_REF_NAME}" >> allure-results/environment.properties
#          echo "COMMIT=${GITHUB_SHA}" >> allure-results/environment.properties
#          echo "RUN_URL=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" >> allure-results/environment.properties
#          echo "OS=$(uname -a)" >> allure-results/environment.properties
#          echo "JDK=$(java -version 2>&1 | head -n1)" >> allure-results/environment.properties
#
#      - name: Publish Report to GitHub Pages
#        if: always()
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_branch: gh-pages
#          publish_dir: allure-history
#
#      - name: Check Allure History
#        run: |
#          echo "Listing contents of allure-history:"
#          ls -R allure-history
#          echo "Checking last-history folder:"
#          ls -R allure-history/last-history || echo "No last-history yet"
#
#      - name: Upload Allure Report
#        uses: actions/upload-artifact@v4
#        with:
#          name: allure-report
#          path: allure-report/**
